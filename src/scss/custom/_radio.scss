$checkbox-radius: $radius !default;
$checkbox-border: 1px solid nth($grays, 3) !default;
$checkbox-block-background: $white !default;
$checkbox-checked-width: .1rem !default;
$checkradio-focus: none;
$checkradio-top-offset: 0rem !default;


@mixin radio-size($size) {
  $newSize: $size * 1.5;
  $height: $newSize;
  $width: $newSize;

  +label {
    font-size: $size;
    line-height: $newSize;
    padding-left: $size * 2;

    &::before,
    &:before,
    &::after,
    &:after {
      width: $width;
      height: $height;
    }
  }

  &.is-rtl {
    +label {
      padding-right: $size * 2;
    }
  }
}

.is-radio[type="radio"] {
  outline: 0;
  user-select: none;
  display: inline-block;
  position: absolute;
  opacity: 0;

  +label {
    position: relative;
    display: initial;
    cursor: pointer;
    vertical-align: middle;
    margin: .5rem;
    padding: .25rem .5rem .25rem 0;
    border-radius: $checkbox-radius;

    &:first-of-type {
      margin-left: 0;
    }

    &:hover {

      &::before,
      &:before {
        animation-duration: 0.4s;
        animation-fill-mode: both;
        animation-name: hover-color;
      }
    }

    &::before,
    &:before {
      position: absolute;
      left: 0;
      background-color: $white;
      top: $checkradio-top-offset;
      content: '';
      border: $checkbox-border;
    }

    &::after,
    &:after {
      position: absolute;
      display: none;
      content: '';
      top: $checkradio-top-offset;
    }
  }

  &.is-rtl {
    +label {
      margin-right: 0rem;
      margin-left: 0.5rem;

      &::before,
      &:before {
        left: auto;
        right: 0;
      }
    }
  }

  &:focus {
    +label {

      &::before,
      &:before {
        outline: $checkradio-focus;
      }
    }
  }

  &:hover:not([disabled]) {
    +label {

      &::before,
      &:before {
        border-color: $primary !important;
      }
    }
  }

  &:checked {
    +label {

      &::before,
      &:before {
        border: $checkbox-border;
      }
    }

    &[disabled] {
      cursor: not-allowed;

      +label {
        opacity: 0.5;
      }
    }

    +label {

      &::before,
      &:before {
        animation-name: none;
      }

      &::after,
      &:after {
        display: inline-block;
      }
    }
  }

  &[disabled] {
    cursor: not-allowed;

    +label {
      opacity: 0.5;
      cursor: not-allowed;

      &:hover,
      &:before,
      &::before,
      &::after,
      &:after {
        cursor: not-allowed;
      }
    }

    &:hover {
      cursor: not-allowed;

      &::before,
      &:before {
        animation-name: none;
      }
    }

    &::before,
    &:before {
      cursor: not-allowed;
    }

    &::after,
    &:after {
      cursor: not-allowed;
    }
  }

  &.has-no-border {
    +label {

      &::before,
      &:before {
        border: none !important;
      }
    }
  }

  &.is-block {
    display: none !important;

    +label {
      width: 100% !important;
      background: $checkbox-block-background;
      color: findColorInvert($checkbox-block-background);
      padding-right: .75rem;
    }

    &:hover:not([disabled]) {
      +label {
        background: darken($checkbox-block-background, 5%);
      }
    }
  }
}

.is-radio[type="radio"] {
  +label {

    &::before,
    &:before {
      border-radius: 50%;
    }

    &::after,
    &:after {
      border-radius: 50%;
      background: $primary;
      left: 0;
      transform: scale(0.5);
    }
  }

  &:checked {
    &.has-background-color {
      +label {

        &::before,
        &:before {
          border-color: $text !important;
          background-color: $text !important;
        }

        &::after,
        &:after {
          border-color: $text !important;
          background-color: $text !important;
        }
      }
    }
  }

  &.is-rtl {
    +label {
      padding-left: 0;

      &::after,
      &:after {
        left: auto;
        right: 0;
      }
    }
  }

  @include radio-size($size-normal);

  &.is-small {
    @include radio-size($size-small);
  }

  &.is-medium {
    @include radio-size($size-medium);
  }

  &.is-large {
    @include radio-size($size-large);
  }

  @each $name,
  $pair in $colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);

    &.is-#{$name} {
      &.has-background-color {
        +label {

          &::before,
          &:before {
            border-color: $color !important;
            background-color: $color !important;
          }
        }
      }

      &:hover:not([disabled]) {
        +label {

          &::before,
          &:before {
            border-color: $color !important;
          }
        }
      }

      &:checked {
        +label {

          &::after,
          &:after {
            border-color: $color !important;
            background-color: $color !important;
          }
        }

        &.has-background-color {
          +label {

            &::before,
            &:before {
              border-color: $color !important;
              background-color: $color !important;
            }

            &::after,
            &:after {
              border-color: $color-invert !important;
              background-color: $color-invert !important;
            }
          }
        }
      }
    }
  }
}